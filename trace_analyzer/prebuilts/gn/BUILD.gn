# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

group("default_deps") {
  public_configs = [ ":default_config" ]
  public_deps = []
}

config("default_config") {
  defines = []
  include_dirs = [
    "..",
    "../include",
  ]
}

config("extra_warnings") {
  cflags = [
    "-Wall",
    "-Wextra",
  ]
  if (is_win) {
    cflags += [ "-Wno-unused-parameter" ]
  }
  if (is_linux) {
    cflags += [
      "-Wall",
      "-Werror",
      "-Weverything",
      "-Wno-c++98-compat-pedantic",
      "-Wno-gnu-statement-expression",
      "-Wno-gnu-zero-variadic-macro-arguments",
      "-Wno-padded",
      "-Wno-reserved-id-macro",
      "-Wno-sign-conversion",
      "-Wno-zero-as-null-pointer-constant",
      "-Wno-weak-vtables",
      "-Wno-unused-parameter",
      "-Wno-missing-variable-declarations",
      "-Wno-inconsistent-missing-destructor-override",
      "-Wno-missing-prototypes",
      "-Wno-deprecated",
    ]
  }
}

config("no_exceptions") {
  cflags_cc = [ "-fno-exceptions" ]
}

config("no_rtti") {
  cflags_cc = [ "-fno-rtti" ]
}

config("c++11") {
  cflags_cc = [ "-std=c++11" ]
}

config("c++17") {
  cflags_cc = [ "-std=c++17" ]
}

config("visibility_hidden") {
  cflags = [ "-fvisibility=hidden" ]
}

config("default") {
  asmflags = []
  cflags = []
  cflags_c = []
  cflags_cc = []
  defines = []
  ldflags = []
  libs = []

  cflags += [
    "-fstrict-aliasing",
    "-fstack-protector",
    "-fPIC",
    "-g",
    "-Wformat",
  ]

  if (is_linux) {
    cflags += [ "-Wa,--noexecstack" ]
  }

  if (is_linux) {
    cflags += [
      "-fcolor-diagnostics",
      "-fdiagnostics-show-template-tree",
    ]
  }

  if (is_linux) {
    libs += [
      "pthread",
      "rt",
    ]
  }

  if (is_debug && is_linux) {
    libs += [ "dl" ]
  }
}

config("debug_symbols") {
  cflags = [ "-O0" ]
  if (is_linux) {
    cflags += [ "-funwind-tables" ]
  }
}

config("release") {
  cflags = [
    "-fdata-sections",
    "-ffunction-sections",
  ]

  cflags += [ "-O3" ]
  ldflags = [
    "-fuse-ld=gold",
    "-fstack-protector",
    "-Wl,--gc-sections",
    "-Wl,-O1",
  ]
  if (is_linux) {
    ldflags += [ "-Wl,--icf=all" ]
  }
  defines = [ "NDEBUG" ]
}

config("shared_library") {
  ldflags = [ "-fPIC" ]
}

config("executable") {
  ldflags = []

  if (is_linux) {
    ldflags += [
      "-Wl,-rpath=\$ORIGIN/.",
      "-Wl,-rpath-link=.",
    ]
  }

  if (is_linux) {
    ldflags += [
      "-Wl,-rpath=\$ORIGIN/.",
      "-Wl,-rpath-link=.",
      "-lrt",
    ]
  }
}
