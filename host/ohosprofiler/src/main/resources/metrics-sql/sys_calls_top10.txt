 select 
   cpu.tid as tid,
   cpu.pid,cpu.process_name,
   cpu.thread_name,
   callstack.name as funName,
   count(callstack.name) as frequency,
   min(callstack.dur) as minDur,
   max(callstack.dur) as maxDur,
   floor(avg(callstack.dur)) as avgDur
  from callstack inner join 
  (     select
           itid as tid,
           ipid as pid,
           group_concat(cpu,",") as cpu,
           group_concat(duration,",") as duration,
           group_concat(min_freq,",") as min_freq,
           group_concat(max_freq,",") as max_freq,
           group_concat(avg_frequency,",") as avg_frequency,
           sum(duration*avg_frequency) as sumNum,
           process_name,
           thread_name
        from
        (
           SELECT itid,
           ipid,
           cpu,
           CAST(SUM(duration) AS INT) AS duration,
           CAST(MIN(freq) AS INT) AS min_freq,
           CAST(MAX(freq) AS INT) AS max_freq,
           CAST((SUM(duration * freq) / SUM(duration)) AS INT) AS avg_frequency,
           process_name,
           thread_name
           FROM (SELECT (MIN(cpu_frequency_view.end_ts, cpu_thread_view.end_ts) - MAX(cpu_frequency_view.start_ts, cpu_thread_view.ts)) AS duration,
                 freq,
                 cpu_thread_view.cpu as cpu,
                 itid,
                 ipid,
                 process_name,
                 thread_name
          FROM cpu_frequency_view JOIN cpu_thread_view ON(cpu_frequency_view.cpu = cpu_thread_view.cpu)
          WHERE cpu_frequency_view.start_ts < cpu_thread_view.end_ts AND cpu_frequency_view.end_ts > cpu_thread_view.ts
          ) GROUP BY itid, cpu) GROUP BY ipid, itid order by sumNum desc limit 10
      )
   as cpu on
  callstack.callid = cpu.tid
 group by callstack.name order by frequency desc limit 10;
