--- googletest/BUILD.gn	2023-01-04 17:01:37.911633386 +0800
+++ ../prebuilts/buildgoogletest/googletestbuild.gn	2022-11-29 14:31:52.355999207 +0800
@@ -9,12 +9,6 @@
 
 config("gtest_config") {
   include_dirs = [ "googletest/include" ]
-  if (is_mingw) {
-    cflags_cc = [
-      "-Wno-unused-const-variable",
-      "-Wno-unused-private-field",
-    ]
-  }
 }
 
 static_library("gtest") {
@@ -23,9 +17,24 @@
     "googletest/include/gtest/gtest-spi.h",
     "googletest/include/gtest/gtest.h",
   ]
+
+  cflags = [
+    "-Wno-inconsistent-missing-override",
+
+    # "-Dprivate=public",  #allow test code access private members
+    "-fprofile-arcs",
+    "-ftest-coverage",
+    "-Wno-unused-command-line-argument",
+    "-Wno-format",
+    "-Wno-unused-const-variable",
+    "-Wno-unused-variable",
+    "-Wno-used-but-marked-unused",
+    "-Wno-exit-time-destructors",
+    "-Wno-missing-noreturn",
+    "-Wno-missing-noreturn",
+  ]
   sources = [
     "googletest/include/gtest/gtest-death-test.h",
-    "googletest/include/gtest/gtest-matchers.h",
     "googletest/include/gtest/gtest-message.h",
     "googletest/include/gtest/gtest-param-test.h",
     "googletest/include/gtest/gtest-printers.h",
@@ -43,16 +52,18 @@
     "googletest/include/gtest/internal/gtest-death-test-internal.h",
     "googletest/include/gtest/internal/gtest-filepath.h",
     "googletest/include/gtest/internal/gtest-internal.h",
+    "googletest/include/gtest/internal/gtest-linked_ptr.h",
+    "googletest/include/gtest/internal/gtest-param-util-generated.h",
     "googletest/include/gtest/internal/gtest-param-util.h",
     "googletest/include/gtest/internal/gtest-port-arch.h",
     "googletest/include/gtest/internal/gtest-port.h",
     "googletest/include/gtest/internal/gtest-string.h",
+    "googletest/include/gtest/internal/gtest-tuple.h",
     "googletest/include/gtest/internal/gtest-type-util.h",
     "googletest/src/gtest-all.cc",
     "googletest/src/gtest-death-test.cc",
     "googletest/src/gtest-filepath.cc",
     "googletest/src/gtest-internal-inl.h",
-    "googletest/src/gtest-matchers.cc",
     "googletest/src/gtest-port.cc",
     "googletest/src/gtest-printers.cc",
     "googletest/src/gtest-test-part.cc",
@@ -66,14 +77,31 @@
   sources -= [ "googletest/src/gtest-all.cc" ]
   public_configs = [ ":gtest_config" ]
   configs += [ ":gtest_private_config" ]
-  configs -= [ "//build/config/coverage:default_coverage" ]
+
+  #  configs -= ["//build/config/coverage:default_coverage"]
 }
 
 static_library("gtest_main") {
   testonly = true
   sources = [ "googletest/src/gtest_main.cc" ]
+
+  cflags = [
+    "-Wno-inconsistent-missing-override",
+
+    #  "-Dprivate=public",  #allow test code access private members
+    "-fprofile-arcs",
+    "-ftest-coverage",
+    "-Wno-unused-command-line-argument",
+    "-Wno-format",
+    "-Wno-unused-const-variable",
+    "-Wno-unused-variable",
+    "-Wno-used-but-marked-unused",
+    "-Wno-exit-time-destructors",
+    "-Wno-missing-noreturn",
+  ]
   public_deps = [ ":gtest" ]
-  configs -= [ "//build/config/coverage:default_coverage" ]
+
+  #  configs -= ["//build/config/coverage:default_coverage"]
 }
 
 config("gmock_private_config") {
@@ -92,26 +120,56 @@
     # fixed.
     "-Wno-inconsistent-missing-override",
   ]
+  cflags = [
+    "-Wno-inconsistent-missing-override",
+
+    #  "-Dprivate=public",  #allow test code access private members
+    "-fprofile-arcs",
+    "-ftest-coverage",
+    "-Wno-unused-command-line-argument",
+    "-Wno-format",
+    "-Wno-unused-const-variable",
+    "-Wno-unused-variable",
+    "-Wno-used-but-marked-unused",
+    "-Wno-exit-time-destructors",
+    "-Wno-missing-noreturn",
+  ]
 }
 
 static_library("gmock") {
   testonly = true
   public = [ "googlemock/include/gmock/gmock.h" ]
+  cflags = [
+    "-Wno-inconsistent-missing-override",
+
+    #    "-Dprivate=public",  #allow test code access private members
+    "-fprofile-arcs",
+    "-ftest-coverage",
+    "-Wno-unused-command-line-argument",
+    "-Wno-format",
+    "-Wno-unused-const-variable",
+    "-Wno-unused-variable",
+    "-Wno-used-but-marked-unused",
+    "-Wno-exit-time-destructors",
+    "-Wno-missing-noreturn",
+  ]
   sources = [
     "googlemock/include/gmock/gmock-actions.h",
     "googlemock/include/gmock/gmock-cardinalities.h",
-    "googlemock/include/gmock/gmock-function-mocker.h",
+    "googlemock/include/gmock/gmock-generated-actions.h",
+    "googlemock/include/gmock/gmock-generated-function-mockers.h",
+    "googlemock/include/gmock/gmock-generated-matchers.h",
+    "googlemock/include/gmock/gmock-generated-nice-strict.h",
     "googlemock/include/gmock/gmock-matchers.h",
     "googlemock/include/gmock/gmock-more-actions.h",
     "googlemock/include/gmock/gmock-more-matchers.h",
-    "googlemock/include/gmock/gmock-nice-strict.h",
     "googlemock/include/gmock/gmock-spec-builders.h",
     "googlemock/include/gmock/internal/custom/gmock-generated-actions.h",
     "googlemock/include/gmock/internal/custom/gmock-matchers.h",
     "googlemock/include/gmock/internal/custom/gmock-port.h",
+    "googlemock/include/gmock/internal/gmock-generated-internal-utils.h",
     "googlemock/include/gmock/internal/gmock-internal-utils.h",
     "googlemock/include/gmock/internal/gmock-port.h",
-    "googlemock/include/gmock/internal/gmock-pp.h",
     "googlemock/src/gmock-all.cc",
     "googlemock/src/gmock-cardinalities.cc",
     "googlemock/src/gmock-internal-utils.cc",
@@ -122,16 +180,33 @@
   sources -= [ "googlemock/src/gmock-all.cc" ]
   public_configs = [ ":gmock_config" ]
   configs += [ ":gmock_private_config" ]
-  configs -= [ "//build/config/coverage:default_coverage" ]
+
+  #  configs -= ["//build/config/coverage:default_coverage"]
   deps = [ ":gtest" ]
 }
 
 static_library("gmock_main") {
   testonly = true
+
+  cflags = [
+    "-Wno-inconsistent-missing-override",
+
+    #    "-Dprivate=public",  #allow test code access private members
+    "-fprofile-arcs",
+    "-ftest-coverage",
+    "-Wno-unused-command-line-argument",
+    "-Wno-format",
+    "-Wno-unused-const-variable",
+    "-Wno-unused-variable",
+    "-Wno-used-but-marked-unused",
+    "-Wno-exit-time-destructors",
+    "-Wno-missing-noreturn",
+  ]
   sources = [ "googlemock/src/gmock_main.cc" ]
   public_deps = [
     ":gmock",
     ":gtest",
   ]
-  configs -= [ "//build/config/coverage:default_coverage" ]
+
+  #  configs -= ["//build/config/coverage:default_coverage"]
 }
