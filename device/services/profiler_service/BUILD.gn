# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../base/config.gni")

config("profiler_service_config") {
  include_dirs = [
    "//utils/native/base/include",
    "../../plugins/api/include",
    "../plugin_service/include",
    "include",
    "src",
    "${OHOS_PROFILER_DIR}/device/services/ipc/include",
    "${OHOS_PROFILER_DIR}/device/base/include",
  ]
  if (current_toolchain != host_toolchain) {
    cflags = [ "-DHAVE_HILOG" ]
  }
}

ohos_source_set("profiler_service") {
  sources = [
    "src/profiler_capability_manager.cpp",
    "src/profiler_data_repeater.cpp",
    "src/profiler_service.cpp",
    "src/result_demuxer.cpp",
    "src/trace_file_helper.cpp",
    "src/trace_file_reader.cpp",
    "src/trace_file_writer.cpp",
  ]
  public_deps = [
    "${OHOS_PROFILER_DIR}/protos/services:profiler_services_proto",
    "${OHOS_PROFILER_DIR}/protos/services:service_types_proto",
  ]
  public_configs = [
    ":profiler_service_config",
    "../../base:hiprofiler_test_config",
  ]
  if (current_toolchain != host_toolchain) {
    if (build_l2) {
      external_deps = [ "hilog:libhilog" ]
    } else {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }
  }
}

ohos_executable("hiprofilerd") {
  sources = [ "src/main.cpp" ]
  deps = [
    ":profiler_service",
    "../../base:hiprofiler_base",
    "../plugin_service:hiprofiler_plugin_service",
  ]
  if (current_toolchain != host_toolchain) {
    if (build_l2) {
      external_deps = [ "shared_library:libhilog" ]
    } else {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }
  }
  install_enable = true
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
}
