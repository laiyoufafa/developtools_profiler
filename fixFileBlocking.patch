From 5ee84151bf9a7e3224f249dd86cdf4cb0c619f1a Mon Sep 17 00:00:00 2001
From: zhang_cuicui <zhang_cuicui@hoperun.com>
Date: Tue, 6 Jun 2023 17:53:07 +0800
Subject: [PATCH] fix file blocking bug

Change-Id: Iecd62e580b4f9e0d6996c4b6ca136c5c229d626f
---
 device/plugins/network_plugin/src/network_plugin.cpp      | 4 ++++
 device/plugins/process_plugin/src/process_data_plugin.cpp | 8 +++++---
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/device/plugins/network_plugin/src/network_plugin.cpp b/device/plugins/network_plugin/src/network_plugin.cpp
index 576ee4c4..d09b95c6 100644
--- a/device/plugins/network_plugin/src/network_plugin.cpp
+++ b/device/plugins/network_plugin/src/network_plugin.cpp
@@ -63,6 +63,10 @@ int NetworkPlugin::Report(uint8_t* data, uint32_t dataSize)
     }
     fp_ = std::unique_ptr<FILE, int (*)(FILE*)>(fopen(realPath, "r"), fclose);
     CHECK_NOTNULL(fp_, -1, "%s:NetworkPlugin, open(%s) Failed, errno(%d)", __func__, file.c_str(), errno);
+    if (errno == EINVAL) {
+        HILOG_ERROR(LOG_CORE, "%s:path is invalid: %s, errno=%d", __func__, file.c_str(), errno);
+        return -1;
+    }
 
     if (protoConfig_.pid().size() > 0) {
         for (int i = 0; i < protoConfig_.pid().size(); i++) {
diff --git a/device/plugins/process_plugin/src/process_data_plugin.cpp b/device/plugins/process_plugin/src/process_data_plugin.cpp
index 551ffeca..a9318df7 100644
--- a/device/plugins/process_plugin/src/process_data_plugin.cpp
+++ b/device/plugins/process_plugin/src/process_data_plugin.cpp
@@ -14,9 +14,10 @@
  */
 #include "process_data_plugin.h"
 
-#include <sstream>
+#include <fcntl.h>
 #include <fstream>
 #include <iostream>
+#include <sstream>
 
 #include "buffer_splitter.h"
 #include "securec.h"
@@ -569,8 +570,9 @@ bool ProcessDataPlugin::GetValidValue(char* p, uint64_t& num)
 bool ProcessDataPlugin::WritePssData(int pid, PssInfo* protoc)
 {
     std::string path = path_ + std::to_string(pid) + "/smaps_rollup";
-    std::ifstream input(path, std::ios::in);
-    if (input.fail()) {
+    std::ifstream input(path, std::ios::in | O_NONBLOCK);
+    if (input.fail() && errno != ENOENT) {
+        // Not capturing ENOENT (file does not exist) errors, it is common for node smaps_rollup files to be unreadable.
         HILOG_ERROR(LOG_CORE, "%s open %s failed, errno = %d", __func__, path.c_str(), errno);
         return false;
     }
-- 
2.25.1

